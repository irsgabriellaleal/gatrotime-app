generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DIRECT_URL")
}

model User {
  id            String        @id @default(uuid())
  email         String        @unique
  password      String
  role          Role          @default(CUSTOMER)
  emailVerified DateTime?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  firstname     String
  lastname      String
  reservas      Reserva[]
  sessions      Session[]
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Reserva {
  id               Int          @id @default(autoincrement())
  nome             String
  email            String
  telefone         String
  dataReserva             DateTime     // renomeado de dataReserva
  horario          String
  pessoas          Int
  mensagem         String?
  restauranteId    String
  criadoEm         DateTime     @default(now())

  userId           String?
  user             User?        @relation(fields: [userId], references: [id])

  restaurantId     String?
  restaurant       Restaurant?  @relation(fields: [restaurantId], references: [id])

  tableId          String?
  table            Table?       @relation(fields: [tableId], references: [id])
}



model Restaurant {
  id           String     @id @default(uuid())
  name         String
  description  String?
  location     String
  cidade       String
  tipoCozinha  String
  nota         Float
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  reservas     Reserva[]
  tables       Table[]
}


model Table {
  id           String        @id @default(uuid())
  restaurantId String
  number       Int
  capacity     Int
  status       TableStatus   @default(AVAILABLE)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  reservas     Reserva[]
  restaurant   Restaurant    @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
}

enum Role {
  CUSTOMER
  ADMIN
}

enum ReservationStatus {
  PENDING
  CONFIRMED
  CANCELED
}

enum TableStatus {
  AVAILABLE
  OCCUPIED
  RESERVED
}
